# Workflow to build Tessalatrix cross-platform, and pull together release
# packages automagically.
#
# For now, we only build a Linux/SDL target, but via a matrix so that in 
# future we can support multiple targets

name: CMake

# Build whenever we push; package on release
on: 
  push:
  release:
    types: [published]


jobs:
  build:
    name: ${{matrix.name}}
    strategy:
      matrix:
        include:
          - os:             ubuntu-20.04
            name:           Linux
            cmake-prefix:
            make-prefix:
            apt-packages:   libsdl2-dev libsdl2-image-dev
          - os:             ubuntu-20.04
            name:           Emscripten
            cmake-prefix:   emcmake
            make-prefix:    emmake
            apt-packages:   
          - os:             windows-latest
            name:           Visual Studio
            cmake-prefix:
            make-prefix:
            apt-packages:

    runs-on: ${{matrix.os}}

    env:
      BUILD_TYPE: Release
      EM_VERSION: 3.1.30
      EM_CACHE_FOLDER: 'emsdk-cache'

    steps:

    # Check out our own repo.
    - name: Checkout Tessalatrix
      uses: actions/checkout@v3

    # Install dependencies
    - name: Install dependencies
      if:   runner.os == 'Linux' && matrix.apt-packages != ''
      run:  sudo apt update && sudo apt install ${{matrix.apt-packages}}

    # Setup Emscripten, if required
    - name: Setup Emscripten
      if:   matrix.name == 'Emscripten'
      uses: mymindstorm/setup-emsdk@v12
      with:
        version: ${{env.EM_VERSION}}
        actions-cache-folder: ${{env.EM_CACHE_FOLDER}}

    # Configure cmake
    - name: Configure CMake
      run:  ${{matrix.cmake-prefix}} cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    # Run the build
    - name: Build
      if:   runner.os == 'Linux'
      run:  cd ${{github.workspace}}/build && ${{matrix.make-prefix}} make

    # On releases, get cmake to build the packages
    - name: Package
      if:   github.event_name == 'release'
      run:  cd ${{github.workspace}}/build && ${{matrix.make-prefix}} make package

    # And attach those to our release
    - name: Release
      if:   github.event_name == 'release'
      uses: softprops/action-gh-release@v1
      with:
        files: |
          ${{github.workspace}}/build/*.zip 
          ${{github.workspace}}/build/*.tar.gz
